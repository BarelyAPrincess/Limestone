apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'license'
apply plugin: 'checkstyle'

buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}

	dependencies {
		classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
	}
}

defaultTasks 'clean', 'build'

group 'net.limestone'
version '2018.0'

sourceCompatibility = 1.8
targetCompatibility = 1.8

allprojects {
	repositories {
		jcenter()
		mavenCentral()
		maven {
			name 'minecraft'
			url 'https://libraries.minecraft.net/'
		}
	}
}

compileJava {options.encoding = 'UTF-8'}

javadoc {options.encoding = "UTF-8"}

license {
	header file( '../../etc/HEADER' )
	ignoreFailures true
	strictCheck true
	mapping 'yaml', 'SCRIPT_STYLE'
	mapping 'yml', 'SCRIPT_STYLE'
	excludes( ['**/*.archive',
	           '**/*.md5',
	           '**/*.txt',
	           '**/*.bmp',
	           '**/*.png',
	           '**/*.jpg',
	           '**/*.yaml',
	           '**/*.yml',
	           '**/*.properties'] )
	ext.year = Calendar.getInstance().get( Calendar.YEAR )
	ext.name = 'Amelia DeWitt'
	ext.email = 'TheAmeliaDeWitt@gmail.com'
}

checkstyle {
	configFile = rootProject.file( 'etc/checkstyle.xml' )
	configProperties = ["basedir": project.projectDir]
}

dependencies {
	testCompile( group: 'junit', name: 'junit', version: '4.12' ) {
		exclude group: 'org.hamcrest'
	}
	testCompile 'org.hamcrest:hamcrest-library:1.3'

	compile project( ':AmeliaLib:Common' )
	compile project( ':Minecraft:Forge' )
}

configure( [project( ':Minecraft:Forge' ), project( ':Minecraft:Clean' )] ) {
	apply plugin: "java"
	apply plugin: "idea"
	apply plugin: "eclipse"

	rootProject.tasks.eclipse.dependsOn tasks.eclipse
	rootProject.tasks.cleanEclipse.dependsOn tasks.cleanEclipse
	rootProject.tasks.idea.dependsOn tasks.idea
	rootProject.tasks.cleanIdea.dependsOn tasks.cleanIdea

	configurations.all {
		transitive = false
	}

	dependencies {
		compile 'com.google.code.findbugs:jsr305:3.0.1'
		compile 'com.mojang:patchy:1.1'
		compile 'oshi-project:oshi-core:1.1'
		compile 'net.java.dev.jna:jna:4.4.0'
		compile 'net.java.dev.jna:platform:3.4.0'
		compile 'com.ibm.icu:icu4j-core-mojang:51.2'
		compile 'net.sf.jopt-simple:jopt-simple:5.0.3'
		compile 'com.paulscode:codecjorbis:20101023'
		compile 'com.paulscode:codecwav:20101023'
		compile 'com.paulscode:libraryjavasound:20101123'
		compile 'com.paulscode:librarylwjglopenal:20100824'
		compile 'com.paulscode:soundsystem:20120107'
		compile 'io.netty:netty-all:4.1.9.Final'
		compile 'com.google.guava:guava:21.0'
		compile 'org.apache.commons:commons-lang3:3.5'
		compile 'commons-io:commons-io:2.5'
		compile 'commons-codec:commons-codec:1.10'
		compile 'net.java.jinput:jinput:2.0.5'
		compile 'net.java.jutils:jutils:1.0.0'
		compile 'com.google.code.gson:gson:2.8.0'
		compile 'com.mojang:authlib:1.5.25'
		compile 'com.mojang:realms:1.10.19'
		compile 'org.apache.commons:commons-compress:1.8.1'
		compile 'org.apache.httpcomponents:httpclient:4.3.3'
		compile 'commons-logging:commons-logging:1.1.3'
		compile 'org.apache.httpcomponents:httpcore:4.3.2'
		compile 'it.unimi.dsi:fastutil:7.1.0'
		compile 'org.apache.logging.log4j:log4j-api:2.8.1'
		compile 'org.apache.logging.log4j:log4j-core:2.8.1'
		compile 'org.lwjgl.lwjgl:lwjgl:2.9.4-nightly-20150209'
		compile 'org.lwjgl.lwjgl:lwjgl_util:2.9.4-nightly-20150209'
		compile 'com.mojang:text2speech:1.10.3'
		compile 'net.minecraft:launchwrapper:1.12'
		compile 'jline:jline:2.13'
		compile 'com.google.code.findbugs:jsr305:1.3.9'
		compile 'org.ow2.asm:asm-debug-all:5.2'
		compile 'com.typesafe.akka:akka-actor_2.11:2.3.3'
		compile 'com.typesafe:config:1.2.1'
		compile 'org.scala-lang:scala-actors-migration_2.11:1.1.0'
		compile 'org.scala-lang:scala-compiler:2.11.1'
		compile 'org.scala-lang.plugins:scala-continuations-library_2.11:1.0.2'
		compile 'org.scala-lang.plugins:scala-continuations-plugin_2.11.1:1.0.2'
		compile 'org.scala-lang:scala-library:2.11.1'
		compile 'org.scala-lang.modules:scala-parser-combinators_2.11:1.0.1'
		compile 'org.scala-lang:scala-reflect:2.11.1'
		compile 'org.scala-lang.modules:scala-swing_2.11:1.0.1'
		compile 'org.scala-lang.modules:scala-xml_2.11:1.0.2'
		compile 'lzma:lzma:0.0.1'
		compile 'java3d:vecmath:1.5.2'
		compile 'net.sf.trove4j:trove4j:3.0.3'
	}

	sourceCompatibility = targetCompatibility = "1.8" // Need this here so eclipse task generates correctly.
	compileJava {
		sourceCompatibility = targetCompatibility = "1.8"
	}

	jar {
		exclude 'GradleStart*', 'net/minecraftforge/gradle/**'
	}

	eclipse.classpath.file.withXml {f ->
		def node = f.asNode()
		/*
		node.classpathentry.each { child ->
		    //if (child.@kind == 'src' && !child.@path.contains('/')) child.replaceNode {} // THIS is the reason we are getting the 'eclipse randomly looses sources!
		    if (child.@path in links) links.remove(child.@path)
		}
		links.each { link -> node.appendNode('classpathentry', [kind:'src', path:link]) }
		*/
		def types = ['src', 'output', 'con', 'lib']
		// Sort entries
		def sorted = node.classpathentry.sort( true ) {types.indexOf( it.@kind ) == -1 ? types.size : types.indexOf( it.@kind )}
		node.classpathentry.each {
			it.replaceNode {}
		} // Nuke all entries
		sorted.each {node.append( it )} // Readd in sorted form
	}
	tasks.eclipseClasspath.dependsOn 'eclipseProject' //Make them run in correct order"

	idea.module.inheritOutputDirs = true
}
